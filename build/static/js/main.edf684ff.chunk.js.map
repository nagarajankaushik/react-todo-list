{"version":3,"sources":["components/pages/About.js","components/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","App.js","index.js"],"names":["About","style","padding","Header","headerStyle","linkStyle","to","color","textDecoration","textAlign","background","TodoItem","margin","this","props","todo","completed","borderRadius","left","boxShadow","title","id","getStyle","type","onChange","toggleComplete","bind","defaultChecked","btnStyle","onClick","deleteIn","Component","float","border","cursor","Todos","todos","map","key","toggleCompleteTodos","deleteInTodos","AddTodo","state","addingTodo","e","setState","target","name","value","submitTodo","preventDefault","addTodo","display","onSubmit","placeholder","autoComplete","textBoxStyle","className","flex","App","toggleCompleteApp","deleteInApp","axios","delete","then","res","filter","addNewTodo","post","newTodo","uuid","v4","data","get","exact","path","render","Fragment","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edf684ff.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n            <div style = {{padding:'10px'}}>\r\n                <h1>About</h1>\r\n                <p>This is Kaushik's TodoList app v1.0.0. \r\n                    Coded through traversyMedia's online ReactJS crash course</p>\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header style = {headerStyle}>\r\n            <h1>\r\n                Kaushik's TodoList\r\n            </h1>\r\n            <Link style={linkStyle} to=\"/\">Home</Link> | \r\n            <Link style={linkStyle}  to=\"/about\"> About</Link>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nconst linkStyle ={\r\n    color:'#fff',\r\n    textDecoration: 'none'\r\n}\r\nconst headerStyle = {\r\n    textAlign:'center',\r\n    background: '#2b2b2b',\r\n    color: 'white',\r\n    padding: '10px',\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class TodoItem extends Component {\r\n\r\n    getStyle() {\r\n        return {\r\n            background : '#f4f4f4',\r\n            padding : '10px',\r\n            margin : '5px',\r\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none',\r\n            borderRadius: '1px',\r\n            left: '10px',\r\n            boxShadow:  '5px 5px 10px #b7b7b7,   -5px -5px 10px #ffffff',\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {title, id, completed} = this.props.todo;\r\n        return (\r\n            <div style = {this.getStyle()}>\r\n                <p>\r\n                    <input type=\"checkbox\" \r\n                        onChange={this.props.toggleComplete.bind(this,id)} \r\n                        defaultChecked = {completed}\r\n                    />\r\n                    {' '}\r\n                    { title }\r\n                    <button style={btnStyle}\r\n                        onClick = {this.props.deleteIn.bind(this,id)} >x</button>\r\n                    \r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    toggleComplete: PropTypes.func.isRequired,\r\n    deleteIn: PropTypes.func.isRequired\r\n}\r\n\r\nconst btnStyle = {\r\n    float: 'right',\r\n    background: '#2b2b2b',\r\n    borderRadius: '50%',\r\n    border: 'none',\r\n    padding: '5px 9px',\r\n    cursor: 'pointer',\r\n    color:'white',\r\n}","import React, {Component} from 'react'\r\nimport TodoItem from './TodoItem'\r\nimport PropTypes from 'prop-types'\r\nimport '../App.css';\r\n\r\n\r\nexport class Todos extends Component {\r\n\r\n    render() {\r\n        return this.props.todos.map((todo) => (\r\n            <TodoItem \r\n                key = {todo.id}\r\n                todo = {todo} \r\n                toggleComplete = {this.props.toggleCompleteTodos}\r\n                deleteIn = {this.props.deleteInTodos}/>\r\n        ));\r\n        \r\n    }\r\n}\r\n\r\nTodos.propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n    toggleCompleteTodos: PropTypes.func.isRequired,\r\n    deleteInTodos: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Todos","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class AddTodo extends Component {\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    addingTodo = (e) => \r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n\r\n    submitTodo = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title);\r\n        this.setState({title: ''})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form style={{display: 'flex'}}\r\n                onSubmit = {this.submitTodo} >\r\n                <input type=\"text\" \r\n                    name=\"title\" \r\n                    placeholder=\"Get what done?\"\r\n                    autoComplete='off'\r\n                    style={textBoxStyle}\r\n                    value= {this.state.title}\r\n                    onChange = {this.addingTodo}/>\r\n                <input type=\"submit\" \r\n                    value=\"Add Todo\"\r\n                    className=\"btn\"\r\n                    style={btnStyle}/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst textBoxStyle = {\r\n    flex:'10',\r\n    borderRadius: '1%',\r\n    border: 'none',\r\n    padding: '5px 15px',\r\n}\r\nconst btnStyle = {\r\n    display: 'inline-block',\r\n    flex:'1',\r\n    borderRadius: '1%',\r\n    border: 'none',\r\n    padding: '5px 9px',\r\n    cursor: 'pointer',\r\n    color:'white',\r\n\r\n}\r\n\r\nAddTodo.propTypes = {\r\n    addTodo: PropTypes.func.isRequired\r\n}","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\n// import { Router, Route, Switch } from 'react-router';\nimport './App.css';\nimport About from './components/pages/About';\nimport Header from './components/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport uuid from 'uuid';\nimport axios from 'axios';\n\n\n\nexport class App extends Component {\n\n  state = { todos: [] };\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=4')\n      .then(res => this.setState({todos: res.data}))\n  }\n\n\n//   state = {\n//     todos: [{\n//         id: uuid.v4(),\n//         title: 'Wash bedsheets',\n//         completed: false\n//     },\n//     {\n//         id: uuid.v4(),\n//         title: 'Water the plants',\n//         completed: true\n//     },\n//     {\n//         id: uuid.v4(),\n//         title: 'Walk the dog lunch',\n//         completed: true\n//     },\n//     {\n//         id: uuid.v4(),\n//         title: 'Make lunch',\n//         completed: false\n//     }\n//     ]\n// };\n\ntoggleCompleteApp = (id) => {\n    this.setState ({\n        todos: this.state.todos.map(todo => {\n            if (todo.id === id) {\n                todo.completed = ! todo.completed;\n            }\n            return todo;\n        })\n    });\n}\n\ndeleteInApp = (id) => {\n  axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)  \n    .then(res => this.setState ({\n        todos: [...this.state.todos.filter(todo =>\n          todo.id !== id)]\n}))\n}\n\n  addNewTodo = (title) => {\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title,\n      completed: false\n    })\n    .then(res => {\n      const newTodo = {\n        id: uuid.v4(),\n        title: res.data.title,\n        completed: res.data.completed\n      }      \n      this.setState({todos: [...this.state.todos, newTodo]})})\n  }\n\n  render () {\n    return (\n      <Router>\n          <div className=\"App\">\n            <div className=\"container\">\n              <Header />\n              <Route exact path=\"/\" render = {props => (\n                <React.Fragment>\n                  <AddTodo addTodo = {this.addNewTodo}/>\n                  <Todos todos={this.state.todos} \n                    toggleCompleteTodos = {this.toggleCompleteApp}\n                    deleteInTodos = {this.deleteInApp} />\n                </React.Fragment>\n              )}  />\n              <Route path=\"/about\"  \n                component={About} />\n\n            </div>\n          </div>\n        </Router>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}